initial state: Final {
  goto NeedB when nextChar == 'a' 
    performing { outputBuffer := "In Final, found A" ; } ;

  goto Error when nextChar != '\0'
    performing { outputBuffer := "In Final, found something other than B" ; } ;

  exit when nextChar == '\0'
    performing { outputBuffer := "In Final, exiting." ; } ;
}

/////////////////////////////////////////////////////////////////////////////////////////

state: NeedB {
  goto Final when nextChar == 'b' 
    performing { outputBuffer := "In NeedB, found B" ; } ;

  goto Error when nextChar != '\0' 
    performing { outputBuffer := "In NeedB, found something other than B" ; } ;

  exit when nextChar == '\0'
    performing { outputBuffer := "In NeeDB, exiting." ; } ;
}

/////////////////////////////////////////////////////////////////////////////////////////

state: Error {
  goto Error when nextChar != '\0' 
    performing { outputBuffer := "In Error" ; } ;

  exit when nextChar == '\0'
    performing { outputBuffer := "In Error, exiting." ; } ;
}
